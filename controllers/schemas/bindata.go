// Code generated by go-bindata. DO NOT EDIT.
// sources:
// controllers/schemas/AdminAuthLogin.json (241B)
// controllers/schemas/AdminUsersCreate.json (515B)
// controllers/schemas/Announcement.json (613B)
// controllers/schemas/Announcements.json (142B)
// controllers/schemas/AuthActivate.json (266B)
// controllers/schemas/AuthLogin.json (277B)
// controllers/schemas/AuthRegister.json (465B)
// controllers/schemas/AuthResetPassword.json (340B)
// controllers/schemas/AuthSendToken.json (375B)
// controllers/schemas/Challenge.json (914B)
// controllers/schemas/ChallengeE.json (370B)
// controllers/schemas/ChallengeMeta.json (377B)
// controllers/schemas/ChallengeUser.json (310B)
// controllers/schemas/Challenges.json (159B)
// controllers/schemas/Error.json (540B)
// controllers/schemas/GameInfo.json (437B)
// controllers/schemas/Score.json (404B)
// controllers/schemas/Scores.json (129B)
// controllers/schemas/ScoresCTFTime.json (775B)
// controllers/schemas/Solution.json (232B)
// controllers/schemas/User.json (715B)
// controllers/schemas/UserPublic.json (348B)
// controllers/schemas/UserSolutionsCreate.json (238B)
// controllers/schemas/Users.json (126B)
// controllers/schemas/admin/announcements/create.json (312B)
// controllers/schemas/admin/announcements/update.json (312B)
// controllers/schemas/admin/auth/login.json (241B)
// controllers/schemas/admin/challenges/create.json (746B)
// controllers/schemas/admin/challenges/getAll.json (162B)
// controllers/schemas/admin/challenges/getOne.json (123B)
// controllers/schemas/admin/challenges/update.json (710B)
// controllers/schemas/admin/users/create.json (523B)
// controllers/schemas/admin/users/getAll.json (147B)
// controllers/schemas/admin/users/getOne.json (146B)
// controllers/schemas/admin/users/update.json (506B)
// controllers/schemas/users/get.json (108B)

package schemas

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _adminauthloginJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xc2\xca\xcc\x09\xba\x75\x67\x60\x47\x0c\xa1\x31\xad\x51\x9b\x04\xdb\x15\x42\x28\x77\x47\x4e\x25\x54\xc1\xfa\xec\xff\xfe\x7f\x3b\x00\xaf\xa4\x33\xfa\x0e\x7c\x1f\x17\x4a\xfd\xaa\xd3\x31\x8f\x94\xfc\xc1\x8e\x11\x65\x60\x2a\x4a\x39\xfd\xbf\x00\xe3\x63\x45\x51\x90\x61\xc2\x25\x6c\x09\x7d\x95\x66\xcb\xd7\x3b\x0e\xba\xb1\xc2\xb9\x20\x2b\xa1\xf8\x0e\xac\xd4\x58\x10\x79\x66\x8e\x5f\xb2\xcb\x8a\x32\xa5\xd1\x37\x5c\x1d\x40\x6d\x96\x10\x23\xd9\x90\x30\x9f\xf6\xbe\x5b\x98\x05\xdb\x83\xcd\x21\x46\x53\x9e\x7f\x4a\x1c\xc0\xc5\x55\xf7\x09\x00\x00\xff\xff\x94\x5a\x26\x69\xf1\x00\x00\x00")

func adminauthloginJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminauthloginJson,
		"AdminAuthLogin.json",
	)
}

func adminauthloginJson() (*asset, error) {
	bytes, err := adminauthloginJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AdminAuthLogin.json", size: 241, mode: os.FileMode(0644), modTime: time.Unix(1537536173, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0x95, 0x96, 0x60, 0x9f, 0x2f, 0xe5, 0x8e, 0x90, 0x17, 0xf8, 0x48, 0x5e, 0x31, 0x34, 0x0, 0x9f, 0x5e, 0x60, 0xb8, 0x89, 0x8d, 0x3f, 0x1a, 0xf0, 0x82, 0x20, 0x83, 0x16, 0x59, 0x49, 0x79}}
	return a, nil
}

var _adminuserscreateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbb\x4e\xc4\x40\x0c\x45\xfb\xf9\x0a\x6b\xea\x7c\x00\x4a\xb7\xa2\xa5\xa0\xa1\x42\x14\xde\x8c\x77\x31\x9a\x17\xb6\x79\x09\xed\xbf\xa3\x49\x02\x4a\xa2\x08\x6d\x19\xfb\xf8\xe6\xce\xf9\x76\x00\xde\xd8\x22\xf9\x1e\xfc\x21\x24\xce\x0f\x4a\xa2\xb7\x42\x68\xe4\xbb\xb6\x0e\xa4\x83\x70\x35\x2e\x79\x0f\x02\xa1\xd7\x37\x52\x9b\x60\xfb\xaa\x63\x54\x39\xbe\xd0\x30\xcf\xaa\x94\x4a\x62\x4c\xea\x7b\x68\x7f\x04\xf0\x19\x13\xfd\x7d\x2d\xee\xd4\x84\xf3\xd9\x8f\xe3\x4b\x37\xb1\x94\x90\xe3\x3f\x70\xf7\x3b\x3f\x15\x49\x68\x6d\x33\x9d\xac\x52\x2a\xaa\x7e\x14\x09\xd7\x04\x25\xce\x77\x94\xcf\xf6\xec\x7b\xb8\x59\xa5\xb0\x1e\x06\xe3\x77\x34\xda\x0d\x3a\x96\x12\x09\xf3\xa6\xff\xa7\x09\xee\xd1\xb3\xa4\x09\x76\xf3\x81\xc7\x10\xb8\xc9\xc6\x78\xbf\x14\x77\xc2\xa8\x34\x02\x4d\x38\xcb\x58\xe0\x71\x61\x73\x65\x6b\xfb\xe8\x9d\xfa\x0e\xe0\xc9\x5d\xdc\x4f\x00\x00\x00\xff\xff\x6f\xa9\x38\xbb\x03\x02\x00\x00")

func adminuserscreateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminuserscreateJson,
		"AdminUsersCreate.json",
	)
}

func adminuserscreateJson() (*asset, error) {
	bytes, err := adminuserscreateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AdminUsersCreate.json", size: 515, mode: os.FileMode(0644), modTime: time.Unix(1539365746, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x7e, 0xe7, 0x74, 0xcb, 0xe9, 0xa1, 0xea, 0xb2, 0x5e, 0xba, 0xd3, 0xd0, 0x34, 0x69, 0xee, 0xd3, 0xf3, 0x41, 0x5f, 0x79, 0xe5, 0xf0, 0xf3, 0x10, 0x1a, 0xb7, 0xb, 0x27, 0x76, 0x42, 0xc}}
	return a, nil
}

var _announcementJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xbd\x4e\xc4\x30\x10\x84\x7b\x3f\xc5\x6a\x6b\x28\x68\xd3\x5d\x49\x47\x8f\x28\x7c\xf6\x5c\x58\xe4\x3f\x9c\x4d\x71\x42\xf7\xee\xc8\xbe\x53\x94\x10\x09\x21\x74\x5d\x94\xfd\x66\x76\x3d\xf3\x65\x88\x58\x45\x03\x78\x20\x3e\xa4\x94\xe7\xe4\x10\x91\x94\x1f\xda\xc8\x63\x72\x55\x8a\x4a\x4e\x3f\x01\x8a\xd9\x23\x5c\x31\x3d\x97\x6e\x90\x8f\x1f\x70\x37\x69\xa9\xb9\xa0\xaa\x60\xe2\x81\xda\x1e\x22\x16\xbf\x7c\xaf\x54\x92\x14\x23\x6a\x97\xf5\x41\x94\x24\x71\x8e\x3c\xd0\x53\xff\x75\xb9\x4e\x96\x43\x77\x0e\x93\x56\x49\x23\x6f\xe0\x63\xf6\xe7\xbf\xb2\xae\xc2\x2a\xfc\x41\x7f\x11\x2c\xd7\x9d\x72\x8d\xb6\x91\xec\xad\xe2\x51\x25\x62\xeb\x36\x17\x7f\x47\x37\xf7\x6e\x43\x40\x1a\xf1\xfc\xcf\xf0\xcc\xcd\x8b\xad\xf7\xd2\x9a\xb4\xe1\x65\xdd\xcd\xc9\x86\x09\x1d\xa8\xf8\x9c\xa5\xa2\xed\x79\x5d\x0a\xdb\x64\xbf\xce\x76\x97\xdd\xee\xf9\x86\xe8\xcd\x5c\xcc\x77\x00\x00\x00\xff\xff\xb2\x70\xa3\x8f\x65\x02\x00\x00")

func announcementJsonBytes() ([]byte, error) {
	return bindataRead(
		_announcementJson,
		"Announcement.json",
	)
}

func announcementJson() (*asset, error) {
	bytes, err := announcementJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Announcement.json", size: 613, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x5f, 0x7, 0x45, 0x47, 0x8c, 0x89, 0xf0, 0x7e, 0x87, 0x1f, 0x3e, 0x9, 0x56, 0xab, 0x24, 0x8d, 0x8d, 0xdd, 0x0, 0xee, 0xc3, 0x1a, 0x97, 0x3, 0x23, 0xcf, 0xa3, 0x5b, 0x72, 0x74, 0xcb}}
	return a, nil
}

var _announcementsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8c\x31\x0e\xc2\x40\x0c\x04\x7b\xbf\x62\x65\x51\x22\xae\xbf\x8e\xa7\x44\xc1\x91\x8c\x12\x5f\x64\x9b\x22\x42\xf7\x77\x74\xd0\xd0\xa4\xdd\x9d\x99\x37\x01\x9c\x9a\xab\x70\x05\xdf\xcd\xda\xcb\x66\xd9\xc4\x32\xf8\x3a\xbe\x87\xc4\xec\xba\xa7\x36\x3b\x21\xf2\xd8\xbf\xf2\xe4\x3e\x1d\xbf\x49\x53\xb6\xe0\x8a\x51\x07\xf8\xe2\xb2\x0c\x62\xd1\x55\x6a\x29\xe5\x3f\x72\x7b\x46\x33\x26\xa0\x53\xa7\x4f\x00\x00\x00\xff\xff\x66\x3a\xa1\xe8\x8e\x00\x00\x00")

func announcementsJsonBytes() ([]byte, error) {
	return bindataRead(
		_announcementsJson,
		"Announcements.json",
	)
}

func announcementsJson() (*asset, error) {
	bytes, err := announcementsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Announcements.json", size: 142, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0x10, 0xa9, 0x1f, 0xdc, 0xc2, 0xef, 0x59, 0xd, 0xf5, 0xda, 0x30, 0x7d, 0x5b, 0x39, 0x44, 0x38, 0x96, 0xeb, 0x46, 0xf5, 0x78, 0x11, 0x9d, 0x27, 0x45, 0xca, 0xe9, 0xb7, 0x57, 0xb, 0x87}}
	return a, nil
}

var _authactivateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xc1\xaa\xc2\x30\x10\x45\xf7\xf9\x8a\x21\xbc\xe5\x2b\xb8\x10\xc1\xee\xfa\x07\xee\x4b\x85\x98\x4c\xed\x68\x6d\x62\x32\x15\xa4\xe4\xdf\x25\x53\x90\xe2\x32\x37\xe7\xce\xb9\x8b\x02\xd0\x4c\x3c\xa2\xae\x41\x37\x33\x0f\x8d\x65\x7a\x19\x46\xfd\x5f\xbe\x1c\x26\x1b\x29\x30\xf9\xe9\x17\x80\x88\xcf\x19\x13\x43\xb2\x03\x3e\xcc\xca\xf3\x3b\xc8\x25\x7f\xb9\xa1\xe5\x35\x0b\xd1\x07\x8c\x4c\x98\x74\x0d\x45\x58\x38\x7f\xc7\xe9\xfb\xdc\x14\x13\x47\x9a\xae\x52\x94\x3c\x18\x66\x8c\x22\x3f\xb7\xbb\xea\x68\xaa\xbe\x5b\x0e\xfb\xfc\xa7\x85\xc8\x0a\x20\x8b\xc5\x38\x47\x65\xa6\x19\x4f\x5b\x5f\x6f\xc6\x84\x02\x94\xb9\x14\xd1\xe9\x1a\xda\xed\x08\x05\xd0\xa9\xac\x3e\x01\x00\x00\xff\xff\x07\x93\x4e\xcc\x0a\x01\x00\x00")

func authactivateJsonBytes() ([]byte, error) {
	return bindataRead(
		_authactivateJson,
		"AuthActivate.json",
	)
}

func authactivateJson() (*asset, error) {
	bytes, err := authactivateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AuthActivate.json", size: 266, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0xe, 0x23, 0x8d, 0x4c, 0xba, 0x8f, 0x16, 0xf1, 0x28, 0xde, 0xb2, 0x77, 0x88, 0x97, 0xea, 0x81, 0x4d, 0xf8, 0xc0, 0xe6, 0x0, 0x2, 0x4, 0x37, 0x53, 0x30, 0xe0, 0x19, 0xe0, 0x6a, 0xaf}}
	return a, nil
}

var _authloginJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\xbd\xae\xc2\x30\x0c\x85\xf7\x3c\x85\xe5\xb9\x4f\xd0\xed\xee\x77\x60\x47\x0c\xa1\x31\xad\x51\x68\x82\xed\x0a\x21\xd4\x77\x47\x49\x8b\x14\x26\x46\x1f\x7f\xe7\xe7\xe5\x00\xd0\xd8\x22\x61\x0f\xf8\xb7\xd8\xf4\x9f\x46\x9e\xb1\x2b\x7a\x20\x1d\x84\xb3\x71\x9a\xbf\xbe\x20\x74\x5f\x48\x0d\x74\x98\xe8\xe6\x37\xd8\x9e\xb9\x66\xa4\xf3\x95\x06\xdb\xb4\x2c\x29\x93\x18\x93\x62\x0f\xa5\x0a\x00\x63\xcd\xff\x9c\x8d\x51\x4d\x78\x1e\xb1\xca\x6b\xb7\xc1\xd9\xab\x3e\x92\x84\x9f\xbc\xdb\x3d\xe8\x43\xe0\x32\xd8\xc7\x43\x5b\x7e\xf1\x51\xa9\x02\x65\x3b\x0b\x95\xc8\xe3\x3e\xa6\x6b\x8a\x4e\x6e\x75\xef\x00\x00\x00\xff\xff\x72\x8a\x73\x5b\x15\x01\x00\x00")

func authloginJsonBytes() ([]byte, error) {
	return bindataRead(
		_authloginJson,
		"AuthLogin.json",
	)
}

func authloginJson() (*asset, error) {
	bytes, err := authloginJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AuthLogin.json", size: 277, mode: os.FileMode(0644), modTime: time.Unix(1611305132, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0xa6, 0xe, 0x39, 0x7f, 0x8a, 0x12, 0x3d, 0xd0, 0x5c, 0x79, 0x8e, 0xdc, 0x75, 0xb5, 0x2d, 0xdb, 0x93, 0x66, 0x86, 0xe, 0xd0, 0x6d, 0xb6, 0xde, 0xba, 0x78, 0x31, 0x72, 0xdb, 0x5b, 0x3f}}
	return a, nil
}

var _authregisterJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x50\x3d\x4f\xc4\x30\x0c\xdd\xf3\x2b\x2c\xcf\x6c\x2c\xa8\x1b\x3b\x03\x62\x45\x0c\xa6\xf5\xb5\x46\xcd\x07\xb6\x4f\x80\xd0\xfd\x77\x94\xe4\x84\xda\x13\x03\x37\xe6\x7d\xe5\xf9\x7d\x07\x00\x74\xf1\x95\x71\x00\xbc\x3f\xfa\xf2\xc4\xb3\x98\xb3\xe2\x4d\xa5\x26\xb6\x51\xa5\xb8\xe4\x74\x29\x00\xe5\xf7\x23\x9b\x83\x8d\x0b\x47\xea\x7a\xff\x2a\x2d\x29\xbf\xbe\xf1\xe8\x1d\x2b\x9a\x0b\xab\x0b\x1b\x0e\x50\x3f\x04\xc0\x44\x91\x7f\x5f\x1b\x9f\xb9\x4a\x9a\x9b\xaf\xe1\x51\xd2\x03\xa7\xd9\x17\x1c\xe0\xb6\x81\xa7\xce\x21\x47\x92\xf5\x3f\x11\x87\xac\x91\xbc\x32\xdd\xb2\x4b\x29\x64\xf6\x91\x75\xba\xb6\xcb\xdd\xbe\xcb\xa7\x2b\xfd\x15\x71\x9e\xa1\x8b\xc3\xd9\x80\x34\x4d\x52\x17\xa5\xf5\x71\x3b\xcd\x81\x56\xe3\x26\xa8\xcb\x8a\x72\x6d\xf5\xbc\xd9\x6b\x77\xf9\xe5\x01\x01\xe0\x25\x9c\xc2\x4f\x00\x00\x00\xff\xff\xaf\x8a\x9e\x17\xd1\x01\x00\x00")

func authregisterJsonBytes() ([]byte, error) {
	return bindataRead(
		_authregisterJson,
		"AuthRegister.json",
	)
}

func authregisterJson() (*asset, error) {
	bytes, err := authregisterJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AuthRegister.json", size: 465, mode: os.FileMode(0644), modTime: time.Unix(1538126454, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x90, 0x95, 0xd6, 0xf7, 0x95, 0x8f, 0x8a, 0x79, 0xf5, 0xa0, 0xb2, 0xf3, 0xd8, 0x43, 0x34, 0x4e, 0xaf, 0x5, 0xc5, 0xfc, 0x4e, 0xda, 0x8f, 0x11, 0x70, 0xa0, 0x54, 0x4e, 0xd3, 0x3e, 0xdd}}
	return a, nil
}

var _authresetpasswordJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x21\x76\x5c\x60\x87\x31\x58\x6e\x7b\x83\xb0\x6b\xc8\xc0\x8b\x95\xc5\x5b\x16\x7b\x92\xc2\x28\x21\xef\x5e\x6c\xb7\x25\x94\xf6\x68\xf9\xfb\x7f\x7d\x5a\x0d\x00\xaa\xd7\x89\xb0\x06\x7c\x5b\x74\x7c\x27\x21\x6d\xac\xc8\x7f\x60\x87\x8f\xe9\xdf\x91\xf4\xec\xa3\xfa\x30\xdf\xa4\x80\xe9\x6f\x21\x51\x90\x7e\xa4\x5f\x5b\x42\x7a\x88\xb9\x33\x7c\x7e\x53\xaf\x65\x16\x39\x44\x62\xf5\x24\x58\x43\x5a\x9d\xb8\xf0\x43\xf3\xe5\xb9\x0b\x8a\xb2\x9f\xbf\x72\x30\xcf\xa3\x55\x25\xce\x06\x1f\xed\x53\xf5\x6a\xab\xa1\x5b\x5f\x9e\xb7\x07\xcc\xc4\x56\x40\x8c\x67\xf5\xfb\x95\x85\x37\xa7\x0c\x5a\xe7\x7c\xba\xcd\x4e\xcd\xde\x6f\xb0\x93\x50\x06\xd2\x79\x9e\x29\x55\xb6\x7b\xe9\xeb\x8d\x06\xa0\x33\x9b\x39\x06\x00\x00\xff\xff\xa6\x51\xce\xbb\x54\x01\x00\x00")

func authresetpasswordJsonBytes() ([]byte, error) {
	return bindataRead(
		_authresetpasswordJson,
		"AuthResetPassword.json",
	)
}

func authresetpasswordJson() (*asset, error) {
	bytes, err := authresetpasswordJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AuthResetPassword.json", size: 340, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x54, 0x75, 0x69, 0xd2, 0x45, 0xe9, 0x62, 0x80, 0xf1, 0x97, 0xc, 0xf2, 0xb9, 0x4e, 0x90, 0xd1, 0x3e, 0x7c, 0x70, 0xbe, 0x49, 0x2a, 0xf8, 0xf1, 0xb6, 0x21, 0x7c, 0x7b, 0x80, 0xe0, 0xda, 0xeb}}
	return a, nil
}

var _authsendtokenJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\x3d\x4e\xc5\x30\x0c\xde\x7b\x0a\xcb\x33\x27\xe8\xc6\x0d\x90\x60\x43\x0c\xa6\xf9\x1e\xcf\xd0\x26\xc5\x71\x91\x10\xea\xdd\x51\x7e\xa8\x2a\x31\xbc\xf1\xfb\x4f\xfc\x33\x10\xb1\xab\xcf\xe0\x91\xf8\x7e\xf3\xeb\x23\x62\x78\x4a\x1f\x88\x7c\x57\xb4\x80\x3c\x99\xae\xae\x29\xfe\x73\x90\xe1\x73\x43\x76\xca\xd3\x15\x8b\xb4\x80\x7f\xaf\xb5\x2b\xbd\xbe\x63\xf2\xc6\xad\x96\x56\x98\x2b\x32\x8f\x54\x26\x89\x18\x8b\xe8\x7c\xc0\x53\x30\xbb\x69\x7c\xab\xc1\xca\x5f\x92\x2d\xe2\x45\x69\x91\xca\xef\x4d\xfe\x0b\xdd\x2c\x41\xdc\x16\x1e\xe9\xb9\x63\x22\x96\xc9\xf5\x4b\x1c\x87\x87\x88\x0d\x19\xce\x1d\xbf\xb4\xa1\xa1\x8f\xb1\x84\xa0\xe5\x0c\x32\x3f\x9c\xbf\x73\x91\x39\xa3\x1a\xca\x35\xd4\x10\x8e\x9d\xfe\xe0\xf3\x53\x87\xd2\xbb\x0f\xbf\x01\x00\x00\xff\xff\x04\xec\xdb\x5d\x77\x01\x00\x00")

func authsendtokenJsonBytes() ([]byte, error) {
	return bindataRead(
		_authsendtokenJson,
		"AuthSendToken.json",
	)
}

func authsendtokenJson() (*asset, error) {
	bytes, err := authsendtokenJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "AuthSendToken.json", size: 375, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0xeb, 0xc4, 0xc2, 0x25, 0x9f, 0xf4, 0x21, 0xc3, 0x38, 0x33, 0x68, 0x8a, 0xac, 0x84, 0x26, 0x86, 0xc2, 0xf, 0xc7, 0x7e, 0xbe, 0xab, 0xf5, 0xfb, 0xaf, 0x61, 0x52, 0xcf, 0x8e, 0xc, 0x28}}
	return a, nil
}

var _challengeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xbb\x6e\xe3\x40\x0c\xec\xf5\x15\x04\x6b\xdd\x0f\xb8\x3b\x5c\x7b\xc0\x5d\x6f\xb8\xa0\xb5\x94\xcd\x64\x5f\xe1\x52\x85\x10\xf8\xdf\x03\xc9\xb1\xa3\x8d\x94\xc0\x45\xba\xc5\x68\x66\x48\x8e\xe6\xb5\x01\x40\x13\xf3\x8c\x3b\xc0\x3f\x67\xf2\x9e\xe3\x89\xb1\x9d\x70\xc7\xa5\x53\xc9\x26\x29\x56\x5f\x21\x24\xc7\xfe\xca\xb1\x31\xcf\xd2\x74\x7c\xe2\xce\xae\x58\xd6\x94\x59\x4d\xb8\xe0\x0e\xa6\x09\x00\x28\xee\xfe\x5e\xa8\xe2\x10\x8e\xac\x38\xc3\x97\xf6\xca\xbc\x6d\xb3\x22\x17\x53\x89\xa7\x9a\x5c\xaf\xf8\x98\x44\xfa\x5e\xba\xc1\xdb\xf8\x8d\xa2\xbd\xe1\x1c\x87\x80\x3b\xd8\x23\x53\x19\xb1\x05\x0c\xec\x64\x08\xd3\xeb\x4c\xea\xf0\x50\x79\x77\x64\x7c\x4a\xba\xbc\x7c\xe1\x4d\xaa\x34\x7e\x58\x8b\x71\x58\xf2\xbe\xd8\x1b\xe0\x52\xcd\xc8\x49\xa2\x6d\xfa\x6f\xa5\x29\xe5\x6f\xea\x9e\x79\x33\xfd\x63\x4a\x9e\x29\x7e\x4e\x34\x73\x74\xe5\xdf\x66\x9e\x5b\x13\x3a\x65\x32\x76\xbf\xed\x91\x38\xfb\xa4\x81\x26\x26\x3a\x32\xfe\x65\x12\xb8\x76\x1b\xb2\xfb\x09\xb7\xe6\xdd\x11\xc9\x39\x99\xda\x41\xfe\xff\xb2\x95\x3d\xf9\xc2\x33\x41\xf9\x65\x10\x9d\x03\xda\xdf\xab\x5a\x55\x71\xa3\x6a\xeb\x2a\xad\x0b\x50\xff\xae\x55\x58\xab\x7b\x1b\x80\x43\x73\x69\xde\x02\x00\x00\xff\xff\xda\x56\x68\xf0\x92\x03\x00\x00")

func challengeJsonBytes() ([]byte, error) {
	return bindataRead(
		_challengeJson,
		"Challenge.json",
	)
}

func challengeJson() (*asset, error) {
	bytes, err := challengeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Challenge.json", size: 914, mode: os.FileMode(0644), modTime: time.Unix(1611316066, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0x8b, 0x9d, 0xfe, 0x47, 0x6e, 0xe7, 0x11, 0x49, 0x47, 0xea, 0xeb, 0x9a, 0x2a, 0xc2, 0x7d, 0x44, 0x9f, 0x4c, 0x43, 0x5, 0x3d, 0x90, 0xee, 0xc, 0x83, 0x9, 0x61, 0xd7, 0x48, 0xb1, 0x24}}
	return a, nil
}

var _challengeeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x31\x4b\xc6\x30\x10\x86\xf7\xfc\x8a\xe3\x70\xfc\xb0\x7b\x56\xf9\x46\xc1\xc5\x49\x1c\x62\xf3\x56\x53\xd2\x24\x5e\xae\xa0\x48\xff\xbb\xa4\xd5\x52\xc1\xa1\xeb\xdd\xfb\x3c\xc7\x7b\x5f\x86\x88\x35\x68\x04\x5b\xe2\xbb\x37\x17\x23\xd2\x2b\xae\x7c\x69\x0b\x8f\xda\x4b\x28\x1a\x72\xfa\xb3\xa6\xeb\x87\x22\x79\x78\x9a\xb2\x47\xdc\xc2\xfa\x59\x56\x49\x7e\x19\xd1\xeb\x36\x2b\x92\x0b\x44\x03\x2a\x5b\x6a\xb7\x88\xb8\xff\xb5\xec\x23\x22\xbe\x11\x0c\x0d\x1e\x42\x84\xed\xba\x6e\x3f\x75\x3b\xd6\x9c\x78\x8d\x2d\x97\x4d\x30\x41\xdd\x29\xf6\x1e\xea\xfe\xe1\xe7\x0a\x39\xc5\x3f\x56\xc8\x91\x37\x3f\x0e\x76\xde\x87\xf6\x14\x17\x1f\x8e\x05\x07\x17\x2b\xd6\x80\xe0\x7d\x0e\x02\xcf\x96\x9e\x0e\x85\x9f\xcd\x62\xbe\x03\x00\x00\xff\xff\x50\x18\xef\x3b\x72\x01\x00\x00")

func challengeeJsonBytes() ([]byte, error) {
	return bindataRead(
		_challengeeJson,
		"ChallengeE.json",
	)
}

func challengeeJson() (*asset, error) {
	bytes, err := challengeeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ChallengeE.json", size: 370, mode: os.FileMode(0644), modTime: time.Unix(1611316008, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x97, 0xeb, 0xe0, 0xfd, 0x83, 0x1, 0x9e, 0x3d, 0xa8, 0xe1, 0x4b, 0xd6, 0xc5, 0xe2, 0x71, 0xb3, 0xd6, 0x6f, 0xd4, 0x79, 0x1f, 0xf9, 0x83, 0x31, 0x61, 0x24, 0x46, 0x12, 0xd4, 0x22, 0x7}}
	return a, nil
}

var _challengemetaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x31\x8e\xc2\x30\x10\x45\x7b\x9f\x62\x34\x75\x4e\x90\x36\xf5\x4a\xdb\xaf\xb6\x70\xe2\xd9\xcd\xc0\xc4\x36\xf6\xb8\x40\x28\x77\x47\x4e\x00\x05\x85\x02\xda\xef\xff\xbe\xdf\x5c\x0c\x00\x2a\xab\x10\xb6\x80\xdd\x68\x45\xc8\xff\xd3\x17\xa9\xc5\xa6\xbe\x39\xca\x43\xe2\xa8\x1c\xfc\x53\x03\x26\x52\xeb\xec\xbd\xa6\xe7\xb8\x2c\x84\xfe\x40\x83\xae\x59\x4c\x21\x52\x52\xa6\x8c\x2d\xd4\x8f\x00\x30\x07\x29\x75\x2b\x77\xa1\x78\x7d\xe4\x9b\x05\x5f\xa6\x9e\x12\x2e\xf1\xdc\xac\x94\xf0\x91\x3e\x23\x46\xf6\xfa\x26\x61\x6e\x14\x5a\xe7\xb8\xba\x59\xf9\xde\x9a\xff\x59\xc9\xb4\x14\x12\x9d\x0a\x27\x72\xd8\xc2\xcf\xcb\x73\xf6\xba\x7b\x1d\x03\xf0\x6b\x66\x73\x0d\x00\x00\xff\xff\x67\x08\xd4\x6c\x79\x01\x00\x00")

func challengemetaJsonBytes() ([]byte, error) {
	return bindataRead(
		_challengemetaJson,
		"ChallengeMeta.json",
	)
}

func challengemetaJson() (*asset, error) {
	bytes, err := challengemetaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ChallengeMeta.json", size: 377, mode: os.FileMode(0644), modTime: time.Unix(1538752376, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x90, 0xd4, 0x94, 0x9a, 0x63, 0x41, 0x6d, 0x89, 0x80, 0x4e, 0x4e, 0x1c, 0xc9, 0xcc, 0xc1, 0x65, 0xd6, 0xf7, 0x14, 0x85, 0xa8, 0x23, 0xd1, 0x90, 0xa2, 0x59, 0x88, 0x4c, 0xdf, 0x80, 0xfa}}
	return a, nil
}

var _challengeuserJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xe0\xec\x13\x78\xed\xda\xa1\x40\xd1\xa9\xe8\x40\x5b\x74\xc3\x44\x91\x14\x8a\x0e\x10\x04\xbe\x7b\x60\x25\x31\x1c\x4f\x59\x3f\xff\xe3\x7f\x57\x07\x80\x26\x16\x18\x5b\xc0\x8f\x1d\x85\xc0\xf1\x9f\x7f\x0a\x2b\x36\xf3\xcd\x73\xe9\x55\xb2\x49\x8a\x2f\x0d\x38\xb2\x91\x27\x23\x18\x92\x42\x3f\xaa\x72\x34\x18\x17\xce\x2e\xb9\xbe\x4c\xdd\x9e\x7b\xbb\x67\x59\x53\x66\x35\xe1\x82\x2d\xcc\xcb\x00\x28\xe5\x3b\x85\x33\xfb\x25\x59\xb1\x5d\x4a\x81\x29\x62\xcd\xa7\xe6\x09\x7c\xca\xe1\x9d\xbe\x7b\x30\x48\xde\xcb\xec\x4f\xe1\x6b\x2d\x30\x50\x28\x5c\x0b\xca\xa7\x51\xb4\xfe\xfc\xdd\x58\x6d\x46\x1d\xc0\x9f\x9b\xdc\x2d\x00\x00\xff\xff\x1a\x14\x17\xc2\x36\x01\x00\x00")

func challengeuserJsonBytes() ([]byte, error) {
	return bindataRead(
		_challengeuserJson,
		"ChallengeUser.json",
	)
}

func challengeuserJson() (*asset, error) {
	bytes, err := challengeuserJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ChallengeUser.json", size: 310, mode: os.FileMode(0644), modTime: time.Unix(1538752339, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0x55, 0xc2, 0x7, 0xcd, 0x6f, 0x42, 0x80, 0xbc, 0xe2, 0x9, 0x1a, 0x34, 0x3c, 0xf1, 0x84, 0x1f, 0xab, 0xc2, 0xbc, 0x77, 0x3f, 0xed, 0x54, 0x87, 0x4e, 0x6f, 0x69, 0x40, 0xde, 0x45, 0x43}}
	return a, nil
}

var _challengesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x61\xf1\x28\xe6\x9e\xab\xf4\xe6\x4f\x2c\xed\xc6\xae\xa4\x49\x49\x16\xb4\x48\xff\x5d\x62\xa1\xd7\x99\x37\xf3\xbe\x0e\x20\x53\x4b\x42\x01\x74\x9f\x39\x25\xc9\x4f\x69\xc3\xc7\xe8\xda\xbb\x49\xda\x58\x75\x35\x2d\xb9\x13\x0f\x6d\x86\x12\x31\x9e\x24\xde\x6a\x33\x16\x31\x9e\xd8\xf8\x18\xd9\xb6\xfe\xff\xb8\x56\xde\x8e\x48\x4d\x96\x46\x01\x5d\x08\xd0\xa5\x4a\xec\x44\xd4\x24\xc1\x7b\x7f\x9a\x87\xdb\xab\x95\x4c\x0e\xd8\xdd\xee\x7e\x01\x00\x00\xff\xff\xca\xd9\x43\x0b\x9f\x00\x00\x00")

func challengesJsonBytes() ([]byte, error) {
	return bindataRead(
		_challengesJson,
		"Challenges.json",
	)
}

func challengesJson() (*asset, error) {
	bytes, err := challengesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Challenges.json", size: 159, mode: os.FileMode(0644), modTime: time.Unix(1611316005, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0x36, 0x8a, 0x38, 0x89, 0xd4, 0x4d, 0x6, 0x75, 0x6b, 0x92, 0x86, 0xc4, 0xc2, 0xb7, 0xca, 0x69, 0xa5, 0x38, 0x29, 0x55, 0xfd, 0x21, 0x95, 0xbd, 0xfe, 0x4, 0x25, 0xa9, 0xa3, 0xe9, 0x57}}
	return a, nil
}

var _errorJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3b\x6e\xc4\x30\x0c\x44\x7b\x9d\x42\x60\xad\x13\x6c\x9f\x3e\x7d\xb0\x85\xb2\xa2\x03\x06\xb2\xa5\x50\x4c\x61\x04\xbe\x7b\x20\xfa\x13\xc1\x56\xb0\x2e\x0c\xf8\x71\x66\x38\x84\x7f\x8c\xb5\x20\x24\x11\xe1\x66\xe1\x85\x39\x31\xb8\xca\x02\x96\x07\x53\x16\x4a\xd3\x31\xb1\x34\x0d\x89\x47\xaf\x50\x55\x32\x67\x35\xa6\xf7\x4f\x7c\xc8\xca\x32\xa7\x8c\x2c\x84\x05\x6e\xb6\xe6\x5b\x0b\xa8\xc1\xfb\x67\x63\x2c\xc2\x34\x7d\x80\xe2\xc5\xad\xe2\x81\x30\x86\xd2\x53\x7b\x66\x3f\x83\xdb\x31\x09\x8e\xad\xae\x5f\x68\x9b\x74\x6a\x6d\x13\xdd\x77\x82\xff\x54\x5c\x9f\xc5\xb5\xf6\xf3\x6d\xcf\xed\xa6\x13\x04\x8c\x5f\xdf\xc4\x58\x8b\xbc\x5d\xdb\x75\x36\x1e\xe4\x6e\xda\xdc\xfa\xd6\x5c\xf0\x21\x50\xfd\x55\x3e\xbe\xb6\xb7\x0f\x3e\x16\x54\xc1\x65\xe5\x5f\xf2\xdd\x2c\xe6\x37\x00\x00\xff\xff\xc0\x95\x80\xef\x1c\x02\x00\x00")

func errorJsonBytes() ([]byte, error) {
	return bindataRead(
		_errorJson,
		"Error.json",
	)
}

func errorJson() (*asset, error) {
	bytes, err := errorJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Error.json", size: 540, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0x7d, 0xf0, 0x1d, 0x84, 0xbe, 0x83, 0x6a, 0xd2, 0x93, 0x4d, 0xb5, 0x89, 0x10, 0xff, 0xa1, 0xb9, 0x6a, 0xda, 0xdc, 0xc5, 0x9b, 0xe1, 0x5, 0x74, 0xb8, 0x22, 0xe4, 0xf6, 0xa2, 0xb9, 0xc8}}
	return a, nil
}

var _gameinfoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x3d\x4e\xc5\x40\x0c\x84\xfb\x3d\x85\xe5\x3a\x5c\x20\x17\x40\x74\xf4\x4f\xaf\x58\x62\x07\x19\x25\xde\xe0\xf5\x0a\x21\xf4\xee\x8e\xd6\xe1\x27\xe9\x90\xe8\x92\xf1\xcc\x67\xef\x7c\x24\x00\x74\xf1\x85\x71\x04\xbc\xcf\x2b\x3f\xe8\x5c\x70\xe8\x32\x71\x9d\x4c\x36\x97\xa2\xdf\x43\x10\x9d\x8b\xad\x39\xb4\x30\xf9\xfb\x16\xd1\xf2\xf4\xc2\x93\xef\xda\x66\x65\x63\x73\xe1\x8a\x23\xf4\x0d\x00\x58\x3d\x7b\xfb\xfd\x3f\x24\xab\x9b\xe8\x73\x24\x43\x67\x6d\x2b\x8e\x70\xc1\xa9\x34\x75\x2a\x6f\x8a\x43\xe4\xcd\x99\xfa\x27\x2b\x31\xe1\x35\xfc\xb7\xe1\x07\x6f\xfe\x17\xfa\x7e\x7e\x9f\x50\x76\xbe\x73\x59\x19\x4f\x24\x56\xfa\x1f\x27\x7d\xb1\x30\x13\x49\x2f\x2a\x2f\x8f\xc7\x42\xe6\xbc\x54\x0e\x83\xf1\x6b\x13\xe3\xbe\xef\x72\x6a\xe9\xf4\xa8\xc3\x5d\x09\xe0\x9a\x6e\xe9\x33\x00\x00\xff\xff\xa1\x85\x1b\x50\xb5\x01\x00\x00")

func gameinfoJsonBytes() ([]byte, error) {
	return bindataRead(
		_gameinfoJson,
		"GameInfo.json",
	)
}

func gameinfoJson() (*asset, error) {
	bytes, err := gameinfoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "GameInfo.json", size: 437, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6c, 0x9e, 0x8f, 0x44, 0x18, 0x12, 0xb7, 0x7b, 0xa4, 0x41, 0x7b, 0x76, 0x39, 0xa7, 0xf5, 0x20, 0xbd, 0xc8, 0x72, 0x47, 0xe6, 0x7b, 0x71, 0xf9, 0x8, 0x48, 0xb2, 0x9c, 0x18, 0x31, 0x89, 0x95}}
	return a, nil
}

var _scoreJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9f\x82\x20\x3a\xba\xf5\xee\xad\x37\x08\x50\x74\x2a\x3a\xc8\xd6\x77\xc0\x54\x96\x5c\x8a\x1a\x8a\x22\x77\x2f\x64\x27\x81\x53\x64\x14\xf9\xde\x97\xf4\x7f\x1b\x22\x36\xb1\x00\xee\x89\xdf\xc6\xa4\xe0\xb6\xce\x3c\xf2\xa8\xb2\x98\xa4\x78\xdb\xd0\x9c\x3c\xc2\xb6\xb7\x9f\x65\x55\xd2\x70\xc2\x68\xdb\x6c\xd1\xb4\x40\x4d\x90\xb9\xa7\x9a\x4c\xc4\x25\x43\x6f\x27\x22\x7e\x52\x4c\xd5\x9b\x24\xa0\xef\xba\xee\x3d\x43\x0f\x65\x08\x32\xbe\x9c\x72\x8a\xbc\x72\xe7\x76\x93\xf3\xfa\x9e\x9d\x7d\xbd\x35\x96\x79\x80\xde\xc3\xea\xe2\xd7\x23\x56\xa2\xe1\xf8\x1f\x2e\x8b\x77\x06\xff\x6a\x8f\x8c\x6c\x2a\xf1\xc8\xed\x75\x3e\x25\x9d\x5d\x25\xb9\x4a\xcf\x26\x33\x2e\x69\xcd\x25\x91\x9d\xf7\x52\xbb\x72\xe1\xb0\x2f\x61\x72\x21\x63\x05\x14\xdf\x45\x14\x9e\x7b\xfa\xd8\x35\x73\xf7\xd1\x86\xe8\xb3\x39\x37\x7f\x01\x00\x00\xff\xff\x4b\x32\x9e\xdf\x94\x01\x00\x00")

func scoreJsonBytes() ([]byte, error) {
	return bindataRead(
		_scoreJson,
		"Score.json",
	)
}

func scoreJson() (*asset, error) {
	bytes, err := scoreJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Score.json", size: 404, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0xf6, 0xee, 0xa9, 0xcb, 0xa5, 0x9b, 0xb2, 0xb3, 0x49, 0xe1, 0xe9, 0x79, 0x4a, 0x39, 0x41, 0x8b, 0x5e, 0x3a, 0x72, 0x6c, 0xbf, 0x89, 0x11, 0xc8, 0x8b, 0x6c, 0x16, 0x7c, 0xe1, 0x52, 0x71}}
	return a, nil
}

var _scoresJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\x31\x0e\xc2\x50\x0c\x43\xf7\x9c\xc2\x8a\x18\x11\x7f\xff\x67\x60\xe3\x04\x55\xc9\x97\x82\x4a\x53\x25\x59\x2a\xd4\xbb\xa3\x94\x85\xf5\xf9\xd9\xfe\x10\xc0\xa9\xb9\x08\x77\xf0\x63\x36\x97\xe0\x6b\xc1\xa7\xc4\xec\xba\xa5\xda\x5a\xd1\x5d\x23\x61\x03\xf1\xa7\xe4\xbe\x9d\xb5\xc9\x7d\xda\x7f\x48\x53\xde\xc1\x1d\xb5\x0b\xf0\xc5\x65\x94\x31\x74\x91\xde\x5a\x3b\x0f\x6e\xaf\xb0\x95\x09\x38\xe8\xa0\x6f\x00\x00\x00\xff\xff\xf3\x84\xee\x9a\x81\x00\x00\x00")

func scoresJsonBytes() ([]byte, error) {
	return bindataRead(
		_scoresJson,
		"Scores.json",
	)
}

func scoresJson() (*asset, error) {
	bytes, err := scoresJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Scores.json", size: 129, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x41, 0x7a, 0x8, 0x95, 0x9f, 0x6a, 0xdb, 0xec, 0xa5, 0x94, 0x2e, 0x99, 0x2d, 0xb9, 0xd2, 0x9a, 0x54, 0x70, 0x95, 0xe2, 0xda, 0xa0, 0xcf, 0xe0, 0xed, 0x84, 0x50, 0xe5, 0x91, 0x5b, 0x9d}}
	return a, nil
}

var _scoresctftimeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x05\xa1\xe9\x5e\x20\xa9\x77\x6f\x45\x81\x4e\x1d\x0a\x34\x5b\xd1\x41\x96\x68\x97\x81\xf5\x53\x8a\x19\x82\x22\xef\x5e\x48\x49\x5b\xc1\xb1\x51\x64\xf1\x40\x9e\xef\xf0\x90\xd6\x67\x03\xa0\x84\x64\x42\xd5\x81\x7a\x31\x81\x31\x3d\xec\x1e\x77\xe4\x50\x6d\x72\xcf\x62\x32\x4c\x51\x28\xf8\xac\x78\xa2\x24\x10\x06\x48\x45\x09\xe4\xe1\xa2\x86\x21\xb0\xd3\x02\xff\xde\x45\x62\xea\xda\xd6\xc8\x20\xe4\xf0\x2e\xf0\xd8\xee\x53\xf0\xdb\x82\xf4\x41\xb3\xdd\x0e\x88\xf6\xff\xd9\x5f\x8e\xb1\x8c\x0e\xfd\x1e\x8d\x9c\x6b\x91\x43\x44\x16\xc2\xa4\x3a\xc8\x09\x01\x54\x12\xed\x2d\xf9\xf1\xb7\x54\xc1\x9a\x59\x1f\x0b\x5b\xca\x24\xe8\x6a\xdd\xf2\x98\x4b\x67\x61\xd8\x37\x83\xda\xcd\x6a\x95\x53\x12\x26\x3f\xaa\xaa\x79\xda\xd4\x74\x59\x77\x1d\xf7\x07\xd7\x23\xaf\xe3\x31\xcc\xf3\xdc\x00\x4f\x3a\xc9\xbd\x31\x18\xe5\x26\x8f\x66\xc1\x4d\x69\x6b\x29\xff\x7d\x3d\x3d\xd7\x97\x1a\xf4\x94\xb0\x92\x31\x7e\x1c\x88\xd1\xaa\x0e\x5e\xe7\x7b\x2c\xdc\x65\x73\x75\xe8\xb5\x05\x7e\xca\x6f\x4d\x1d\x33\x7f\x4b\xcc\x3f\x03\x5e\x47\xab\x1e\x53\x93\x7d\x4f\xcd\x57\x00\x00\x00\xff\xff\x16\x99\x3f\xb4\x07\x03\x00\x00")

func scoresctftimeJsonBytes() ([]byte, error) {
	return bindataRead(
		_scoresctftimeJson,
		"ScoresCTFTime.json",
	)
}

func scoresctftimeJson() (*asset, error) {
	bytes, err := scoresctftimeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ScoresCTFTime.json", size: 775, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6c, 0x82, 0x8a, 0x80, 0x16, 0x46, 0xde, 0x5, 0xf2, 0x9a, 0x6b, 0x80, 0x78, 0xbb, 0xdf, 0xf1, 0x87, 0xa3, 0xa8, 0xbb, 0xe1, 0x63, 0x69, 0x78, 0xb9, 0x7b, 0x66, 0x44, 0x63, 0x53, 0x3b, 0x91}}
	return a, nil
}

var _solutionJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\xb1\x0a\xc2\x30\x10\x86\xf7\x3e\xc5\x71\x38\x16\xbb\x77\x15\x77\x41\x7c\x00\x9b\xfe\xd5\x94\xb3\x09\x97\x2b\x28\xd2\x77\x97\x34\x28\x9d\x1c\x32\xe4\xbf\xef\xfb\xde\x15\x11\x9b\x37\x01\xb7\xc4\xe7\x20\xb3\xf9\x30\x71\x9d\xe7\x1e\xc9\xa9\x8f\xeb\xb0\x39\xd2\x23\xf4\x90\x82\xd8\x2b\xae\x62\xe8\x46\x38\x2b\x5b\xd4\x10\xa1\xe6\x91\xb8\xa5\xdc\x27\xe2\x39\x41\x7f\x3f\x22\xde\x29\x86\xec\x0d\x5e\xd0\x36\x4d\x73\x49\xd0\xd3\xdc\x89\x77\xfb\x31\x85\x89\x57\x6e\xa9\x8b\xec\xee\x57\x11\x4c\x37\xfc\x2b\x1c\xbe\xd0\xf1\x69\xdb\x46\x95\xdf\x52\x7d\x02\x00\x00\xff\xff\x14\x8f\xfe\xa6\xe8\x00\x00\x00")

func solutionJsonBytes() ([]byte, error) {
	return bindataRead(
		_solutionJson,
		"Solution.json",
	)
}

func solutionJson() (*asset, error) {
	bytes, err := solutionJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Solution.json", size: 232, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0xb, 0x52, 0x13, 0x7d, 0x47, 0xb2, 0x12, 0xd9, 0x62, 0xc1, 0x57, 0x4c, 0xab, 0xda, 0x79, 0x20, 0xba, 0xde, 0xda, 0xb1, 0x7e, 0x29, 0xd1, 0x8b, 0xf9, 0xc, 0xe7, 0x5, 0x2b, 0xf9, 0x46}}
	return a, nil
}

var _userJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x39\x4f\xc4\x40\x0c\x85\xfb\xfc\x0a\xcb\x35\x14\x74\x28\xdd\xf6\x14\x34\x54\x88\xc2\x9b\xf1\x06\xa3\xb9\xf0\x38\x1c\x42\xfb\xdf\x51\x0e\xa2\xcc\x2a\x42\x42\xa2\x8b\xfc\x9e\xbf\x71\x9e\xfd\xd5\x00\xa0\x89\x79\xc6\x16\xf0\xa1\xb0\xe2\xd5\x58\x72\x5c\x3a\x95\x6c\x92\xe2\x8f\x00\x21\x39\xf6\xb3\x6c\x9f\x79\x6a\x48\xc7\x17\xee\x6c\xae\x65\x4d\x99\xd5\x84\x0b\xb6\x30\x72\x01\x50\xdc\xfa\xbd\xe9\x92\x68\xdc\x2f\x2f\x4d\x42\x90\x28\x61\x08\xd8\xc2\xcd\x54\x3a\xcf\x0a\x46\x0a\xbc\x07\x28\xa6\x12\x7b\xac\xbc\x1c\x48\xfc\x2f\xe6\xf5\xb1\x53\xd2\x40\x36\x2a\x73\x4b\x45\xc9\x54\xca\x7b\xd2\xdd\xb1\x2f\x41\x41\xe2\x1d\xc7\xde\x9e\xb1\x85\xdb\x8a\x22\xe5\xd0\x99\xbc\x91\xf1\x2e\xe8\x98\x92\x67\x8a\x17\xf3\x7f\x98\xd2\x9e\x7b\xc9\xb8\x32\x77\xca\x23\xfc\x60\x7f\xfb\x61\x47\xc6\xd7\x26\x81\x6b\xda\x90\xdd\x7f\xd0\x9a\x85\x88\xe4\x9c\x8c\x97\x43\xfe\x7e\x7b\x13\x27\xf2\x85\x27\x83\xf2\xeb\x20\x3a\x85\xf3\xb8\x1e\xca\x76\xe7\xd5\x4e\xab\x80\x76\x12\x6e\x00\x9e\x9a\x73\xf3\x1d\x00\x00\xff\xff\xc0\xc0\x06\xd7\xcb\x02\x00\x00")

func userJsonBytes() ([]byte, error) {
	return bindataRead(
		_userJson,
		"User.json",
	)
}

func userJson() (*asset, error) {
	bytes, err := userJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "User.json", size: 715, mode: os.FileMode(0644), modTime: time.Unix(1533736724, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0x6c, 0xe6, 0xeb, 0x18, 0x30, 0xe9, 0x1, 0x78, 0xc6, 0x68, 0x32, 0xbe, 0x98, 0x61, 0x25, 0xea, 0xd6, 0x76, 0xf1, 0x14, 0xed, 0xe5, 0xb3, 0xf4, 0xb8, 0x8e, 0x56, 0xd3, 0x89, 0x36, 0x5}}
	return a, nil
}

var _userpublicJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x6a\xc5\x30\x0c\x85\x77\x3f\x85\xd0\xdc\xa5\x6b\x9e\x22\x4b\xa7\xd2\xc1\x89\xd5\xa0\xe2\xbf\xca\x0a\xb4\x5c\xf2\xee\x17\xdb\xb9\x21\x81\x6c\x46\xdf\x77\x2c\x9d\x87\x01\x40\x65\xf5\x84\x03\xe0\x47\x21\x19\xd7\xc9\xf3\x8c\x6f\x15\x38\x2a\xb3\x70\x56\x4e\xf1\x85\x21\x37\x0e\x21\x39\xf2\xdd\xd2\xff\xdc\xd2\x69\xfa\xa1\x59\xfb\x2c\x4b\xca\x24\xca\x54\x70\x80\xba\x04\x00\xd9\x1d\xef\x53\x8a\xa3\xd2\x42\xd2\x62\x0d\x04\x8e\x1c\xd6\x80\x03\xbc\xb7\xd1\xd6\x09\x46\x1b\xe8\xee\x83\xa2\xc2\x71\xc1\x8b\x4b\x7f\x2a\xf6\x4e\xde\x6f\xec\xb2\xd9\x03\x68\x9d\xe3\x5a\xd2\xfa\xf1\x7c\xf7\xb7\xf5\x85\x9a\x20\xf4\xbb\xb2\x50\x2d\xf0\x79\x94\x39\xdf\x75\xd9\x6b\x00\xbe\xcc\x66\x9e\x01\x00\x00\xff\xff\xa9\x1b\x73\x6a\x5c\x01\x00\x00")

func userpublicJsonBytes() ([]byte, error) {
	return bindataRead(
		_userpublicJson,
		"UserPublic.json",
	)
}

func userpublicJson() (*asset, error) {
	bytes, err := userpublicJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "UserPublic.json", size: 348, mode: os.FileMode(0644), modTime: time.Unix(1531382952, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xee, 0xd0, 0xbb, 0x4c, 0xff, 0xa7, 0xeb, 0xdd, 0x65, 0x98, 0x42, 0x2b, 0x74, 0x7b, 0x42, 0x2e, 0x67, 0x92, 0xf5, 0x69, 0xbb, 0xa0, 0xbc, 0xed, 0x1b, 0x6, 0xda, 0x9a, 0x16, 0x1a, 0xfd}}
	return a, nil
}

var _usersolutionscreateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x41\x8a\xc3\x30\x0c\x45\xf7\x3e\xc5\x47\xeb\x39\x41\xb6\x73\x81\x81\xa1\xab\xd2\x85\x1b\x2b\x41\xc5\xc4\xae\xa4\x2c\x4a\xc9\xdd\x8b\xdd\xa6\x64\xa9\xcf\xfb\xff\xe9\x19\x00\x72\xf1\xcc\x34\x80\x4e\xc6\xfa\x5f\xf2\xea\x52\x16\xfb\x55\x8e\xce\xf4\xd3\x88\xc4\x36\xaa\xd4\x96\xef\x1c\x6c\x07\x31\x76\x12\xca\xf7\x95\xcd\xdf\x0d\x7f\xd4\x3e\x59\xae\x37\x1e\x3f\x59\xd5\x52\x59\x5d\xd8\x68\x40\x33\x03\x34\xe5\x38\x7f\xaf\x43\xcf\x5c\x65\x99\xa9\xc7\x5b\x00\xb6\xbe\x10\x53\x92\xe6\x8c\xf9\xef\xb8\x35\xc5\x6c\xdc\x81\xf6\x83\x28\x27\x1a\x70\x3e\x08\x02\x70\x09\x5b\x78\x05\x00\x00\xff\xff\x89\xde\xc8\x92\xee\x00\x00\x00")

func usersolutionscreateJsonBytes() ([]byte, error) {
	return bindataRead(
		_usersolutionscreateJson,
		"UserSolutionsCreate.json",
	)
}

func usersolutionscreateJson() (*asset, error) {
	bytes, err := usersolutionscreateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "UserSolutionsCreate.json", size: 238, mode: os.FileMode(0644), modTime: time.Unix(1530003580, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3b, 0xd4, 0x30, 0x31, 0x3c, 0x25, 0xae, 0xdb, 0x39, 0xd0, 0x10, 0x3d, 0x65, 0x47, 0x53, 0x85, 0x8e, 0x8b, 0x57, 0x60, 0xfb, 0x8c, 0xe8, 0xb8, 0x10, 0x2, 0xbb, 0xe6, 0x64, 0x68, 0xfc, 0x83}}
	return a, nil
}

var _usersJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x31\x0e\x02\x31\x0c\x04\x7b\xbf\x62\x65\x51\x22\xd2\xe7\x0d\xb4\x3c\xe0\x04\x8e\x64\x74\x5c\x4e\xb6\x29\x22\x94\xbf\x23\x43\x71\xed\xec\xec\x7c\x08\xe0\xd0\x58\x85\x2b\xf8\xe6\x62\xce\xe7\x64\x0f\xf1\xbb\xe9\x1e\xda\xb7\x5c\xae\xea\x81\xde\xf0\x3e\x8c\x18\xfb\xef\xb4\x98\x2d\xe3\x8f\x34\xe4\xe5\x5c\x91\x55\x80\x4f\x26\x2d\x8d\xa6\xab\xd4\x52\x4a\xe6\x2f\x4f\xef\x1b\x13\x30\x69\xd2\x37\x00\x00\xff\xff\x1d\xdc\x35\xd1\x7e\x00\x00\x00")

func usersJsonBytes() ([]byte, error) {
	return bindataRead(
		_usersJson,
		"Users.json",
	)
}

func usersJson() (*asset, error) {
	bytes, err := usersJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Users.json", size: 126, mode: os.FileMode(0644), modTime: time.Unix(1533736982, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0x80, 0xbb, 0x87, 0xd3, 0x46, 0xd5, 0x5d, 0xb8, 0xd, 0xf4, 0xea, 0xe7, 0x26, 0xe8, 0x7d, 0xa7, 0x3c, 0xb8, 0x76, 0x9a, 0xe8, 0x3c, 0xd, 0x59, 0xe7, 0x92, 0xa2, 0x88, 0xc5, 0x4c, 0x7f}}
	return a, nil
}

var _adminAnnouncementsCreateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\xc0\x20\x10\x85\x77\x7e\x05\xb9\xb9\x8b\x6b\x37\xe3\xe4\x66\x5c\x8d\x03\x2d\xcf\x7a\x06\x8e\x16\x8e\xa1\x31\xfd\xef\xa6\xb4\x26\x0c\x0e\x8e\x3c\xbe\xf7\x5d\xde\xb7\xb1\x96\x94\x35\x80\x46\x4b\x8f\x22\xa9\xca\x8c\x08\xd1\xa7\x0c\xa7\x78\xc5\x56\x51\x94\x86\xc6\xed\x6b\xc3\xd2\xf4\x85\xf9\xce\xd6\x9c\x56\x64\x65\x14\x1a\xed\x69\xeb\x7c\xd7\xb3\x2b\x16\xcd\x2c\x0b\xb5\xf8\x18\x2e\x78\x4a\x7e\xff\x2f\x3b\x7f\xba\x10\x20\x0b\x9e\xfd\x5f\x15\x16\xc5\x82\x4c\xc3\xef\x47\x64\xe1\x58\x23\x8d\xf6\xe1\xf2\x98\xdb\x45\xce\x7b\x56\x4e\xe2\xc2\x4b\x3f\xe0\xc3\x85\x82\x06\x64\x6c\x95\x33\xce\x3b\x6f\xfd\x2a\x63\xed\xbb\x39\xcc\x4f\x00\x00\x00\xff\xff\xa2\xce\xd1\x4f\x38\x01\x00\x00")

func adminAnnouncementsCreateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminAnnouncementsCreateJson,
		"admin/announcements/create.json",
	)
}

func adminAnnouncementsCreateJson() (*asset, error) {
	bytes, err := adminAnnouncementsCreateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/announcements/create.json", size: 312, mode: os.FileMode(0644), modTime: time.Unix(1539762292, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2e, 0x97, 0x5, 0x51, 0x3b, 0x3f, 0x35, 0x58, 0x3b, 0x6, 0x28, 0x87, 0x9d, 0x1, 0x71, 0x25, 0x72, 0x58, 0xa2, 0x9b, 0x69, 0x9e, 0x0, 0x3c, 0x62, 0x5, 0x1f, 0x23, 0xb5, 0xb3, 0x81, 0xd5}}
	return a, nil
}

var _adminAnnouncementsUpdateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc6\x20\x14\x85\x77\x9e\x82\xdc\xb9\x8b\x6b\x37\x47\x37\x63\xe2\x64\x1c\xf8\xcb\xb1\x5e\x03\x17\x7e\xb8\x0c\x8d\xe9\xbb\x9b\xd2\x9a\x30\x38\x38\x72\xf8\xce\x77\x73\xbe\x8d\xb5\xa4\xac\x01\x34\x5b\x7a\x14\x49\x4d\x16\x44\x88\xbe\x66\xef\x14\x2f\xb8\x37\x54\xa5\xa9\x73\x5b\xee\x58\xba\x7d\x61\xb9\xb2\x5c\x52\x46\x51\x46\xa5\xd9\x1e\xb6\xc1\x77\x3e\x87\x62\xd5\xc2\xb2\x52\x8f\xf7\xe9\x84\x6f\xc9\x6f\xff\x65\x97\x4f\x17\x02\x64\xc5\x93\xff\xab\xc2\xa2\x58\x51\x68\xfa\xfd\x88\x2c\x1c\x5b\xa4\xd9\x3e\x9c\x1e\x73\xb9\xc8\x79\xcf\xca\x49\x5c\x78\x1e\x07\x7c\xb8\x50\xd1\x81\x82\x7b\xe3\x82\xe3\xce\xdb\xb8\xca\x58\xfb\x6e\x76\xf3\x13\x00\x00\xff\xff\xdd\x71\x16\xc8\x38\x01\x00\x00")

func adminAnnouncementsUpdateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminAnnouncementsUpdateJson,
		"admin/announcements/update.json",
	)
}

func adminAnnouncementsUpdateJson() (*asset, error) {
	bytes, err := adminAnnouncementsUpdateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/announcements/update.json", size: 312, mode: os.FileMode(0644), modTime: time.Unix(1539762300, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xc8, 0x88, 0xc6, 0xec, 0x3a, 0xde, 0xee, 0xd2, 0x22, 0x50, 0x3f, 0x2f, 0x4, 0x1a, 0xd1, 0x15, 0x0, 0x66, 0xa6, 0x8a, 0xe1, 0x0, 0xa7, 0xa, 0x63, 0xa7, 0xc7, 0xa0, 0x75, 0x6a, 0x29}}
	return a, nil
}

var _adminAuthLoginJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xc2\xca\xcc\x09\xba\x75\x67\x60\x47\x0c\xa1\x31\xad\x51\x9b\x04\xdb\x15\x42\x28\x77\x47\x4e\x25\x54\xc1\xfa\xec\xff\xfe\x7f\x3b\x00\xaf\xa4\x33\xfa\x0e\x7c\x1f\x17\x4a\xfd\xaa\xd3\x31\x8f\x94\xfc\xc1\x8e\x11\x65\x60\x2a\x4a\x39\xfd\xbf\x00\xe3\x63\x45\x51\x90\x61\xc2\x25\x6c\x09\x7d\x95\x66\xcb\xd7\x3b\x0e\xba\xb1\xc2\xb9\x20\x2b\xa1\xf8\x0e\xac\xd4\x58\x10\x79\x66\x8e\x5f\xb2\xcb\x8a\x32\xa5\xd1\x37\x5c\x1d\x40\x6d\x96\x10\x23\xd9\x90\x30\x9f\xf6\xbe\x5b\x98\x05\xdb\x83\xcd\x21\x46\x53\x9e\x7f\x4a\x1c\xc0\xc5\x55\xf7\x09\x00\x00\xff\xff\x94\x5a\x26\x69\xf1\x00\x00\x00")

func adminAuthLoginJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminAuthLoginJson,
		"admin/auth/login.json",
	)
}

func adminAuthLoginJson() (*asset, error) {
	bytes, err := adminAuthLoginJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/auth/login.json", size: 241, mode: os.FileMode(0644), modTime: time.Unix(1537536183, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0x95, 0x96, 0x60, 0x9f, 0x2f, 0xe5, 0x8e, 0x90, 0x17, 0xf8, 0x48, 0x5e, 0x31, 0x34, 0x0, 0x9f, 0x5e, 0x60, 0xb8, 0x89, 0x8d, 0x3f, 0x1a, 0xf0, 0x82, 0x20, 0x83, 0x16, 0x59, 0x49, 0x79}}
	return a, nil
}

var _adminChallengesCreateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6e\xc3\x30\x0c\x45\x77\x9f\x82\xe0\xec\x13\x64\x2b\xb2\x16\x68\xf7\x20\x03\x63\xd1\x0e\x5b\x59\x52\x29\x7a\x30\x8a\xdc\xbd\x90\x93\x06\x72\x92\x16\xd9\x6c\xe2\x91\x9f\xff\x53\xdf\x0d\x00\x9a\x98\x67\xdc\x00\xbe\xb8\x51\xc2\xf6\x48\xde\x73\x18\x38\x6f\x95\xc9\x18\xdb\xc2\x38\xce\x9d\x4a\x32\x89\xa1\x90\x57\x08\xba\x05\x02\xe5\xaf\x89\xb3\x9d\x61\x9b\xd3\x32\x2f\x1e\x3e\xb8\xbb\xd4\x92\xc6\xc4\x6a\xc2\x19\x37\x50\x64\x2b\xe1\xf3\x6f\xd5\x98\x4d\x25\x0c\xb8\x94\x4f\xed\x19\x5e\x6f\xf0\x54\x4b\x47\xc6\x43\xd4\x5a\xb3\xea\x20\x55\x9a\xb1\xfd\x2d\x8b\xf1\x58\x73\x7f\xcc\x06\x38\xad\x34\x52\x94\x60\x0f\xe7\x87\x69\x3c\xb0\xde\x98\x90\xbe\x97\x6e\xf2\x36\xff\xe3\xe1\xba\x12\x87\x69\xc4\x0d\xec\x90\x29\xcf\xd8\x02\x8e\xec\x64\x1a\xcb\xd7\x91\xd4\xe1\x7e\x35\xbb\xf7\x34\x3c\x9b\x8c\xe4\xd7\xd8\x7d\xb2\x7b\xc4\x1f\x62\xf4\x4c\xe1\x36\xfd\xc4\xc1\xe5\xb7\x87\xd9\xaf\x9c\x36\x97\x26\x24\xe7\xa4\x5c\x8b\xfc\x7b\x7d\xfb\x9e\x7c\xe6\x05\x28\x6f\x46\x74\x59\x62\x57\x3f\x88\xfb\xeb\xad\xb3\xbe\xcf\xb2\x4e\xe0\xd6\x61\x03\xb0\x6f\x4e\xcd\x4f\x00\x00\x00\xff\xff\x14\x33\x9c\xab\xea\x02\x00\x00")

func adminChallengesCreateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminChallengesCreateJson,
		"admin/challenges/create.json",
	)
}

func adminChallengesCreateJson() (*asset, error) {
	bytes, err := adminChallengesCreateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/challenges/create.json", size: 746, mode: os.FileMode(0644), modTime: time.Unix(1611316096, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xaf, 0x47, 0xa4, 0x78, 0x7d, 0xc9, 0x11, 0x31, 0x2f, 0x4a, 0xfc, 0x82, 0xa7, 0x29, 0xb7, 0x86, 0x77, 0x34, 0xe, 0xc7, 0x67, 0xb8, 0x8d, 0x73, 0x2a, 0x98, 0x45, 0xb7, 0x8, 0x34, 0x69}}
	return a, nil
}

var _adminChallengesGetallJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\xb1\xaa\xc3\x30\x0c\x85\xe1\xdd\x4f\x21\xc4\x1d\x2f\xcd\xee\x2d\x94\x92\xe7\x30\xc9\x49\xab\xa2\xd8\xc6\xd2\x12\x4a\xde\xbd\xb8\x81\xac\x87\x8f\xf3\x7f\x02\x11\xbb\xb8\x82\x23\xf1\xb8\x6c\x92\xef\xaf\xa4\x8a\xfc\x84\x4d\xf0\x51\x95\xff\xbb\x59\x60\x73\x93\xea\x52\x72\x97\x13\x9c\x92\x2a\xcd\x17\xa6\x06\xab\x25\x1b\x4e\xef\x7b\xfd\x5d\xa6\xd6\xd2\x7e\x4e\xe2\xd8\x8c\x23\xf5\x26\x11\xff\x35\xac\x5d\xac\xa2\x88\xc3\x30\x5c\xdd\xc7\xed\x6d\x25\x73\x20\x3a\xc2\x11\xbe\x01\x00\x00\xff\xff\xc4\xcc\xdc\xd4\xa2\x00\x00\x00")

func adminChallengesGetallJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminChallengesGetallJson,
		"admin/challenges/getAll.json",
	)
}

func adminChallengesGetallJson() (*asset, error) {
	bytes, err := adminChallengesGetallJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/challenges/getAll.json", size: 162, mode: os.FileMode(0644), modTime: time.Unix(1611316097, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0x5, 0xd5, 0xeb, 0x22, 0x3d, 0x46, 0x5c, 0xfe, 0x43, 0x65, 0x2d, 0xbe, 0x6f, 0x7b, 0xf, 0xe4, 0xe9, 0xc9, 0xb3, 0xb5, 0x60, 0xb9, 0xea, 0xe, 0x51, 0x96, 0x87, 0xea, 0x17, 0xe5, 0x42}}
	return a, nil
}

var _adminChallengesGetoneJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x0a\x02\x41\x0c\x05\xd0\x7e\x4e\x11\x82\xa5\x38\xfd\x76\x22\xb2\xa5\x67\x90\xdd\xbf\x1a\x89\xc9\x30\x49\x27\xde\x5d\x06\xd4\xfe\xf1\x5e\x85\x88\x53\x52\xc1\x13\xf1\x71\x7d\x8a\x9d\xee\x57\x55\xd8\x0d\x31\x23\x2f\x06\xde\x0f\xb3\x22\x96\x2e\x2d\xc5\x6d\xc8\x19\x49\x6e\xa0\xe5\x87\xa9\x23\x9a\x5b\x7c\xf9\xae\x63\x1b\x6e\x13\xc5\x54\x6b\xfd\xa7\xe7\xc3\x23\xdc\xb8\xbc\xcb\x27\x00\x00\xff\xff\xff\xb7\x15\x83\x7b\x00\x00\x00")

func adminChallengesGetoneJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminChallengesGetoneJson,
		"admin/challenges/getOne.json",
	)
}

func adminChallengesGetoneJson() (*asset, error) {
	bytes, err := adminChallengesGetoneJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/challenges/getOne.json", size: 123, mode: os.FileMode(0644), modTime: time.Unix(1611316099, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xd6, 0x87, 0xe3, 0xf6, 0x42, 0xcf, 0x70, 0xb3, 0xdc, 0x3, 0xfa, 0xf1, 0x6c, 0x26, 0xf2, 0xbe, 0x3a, 0xf7, 0xa3, 0x4a, 0xed, 0xe1, 0xa7, 0x28, 0x12, 0xe0, 0x6e, 0x6a, 0xdd, 0x29, 0xcb}}
	return a, nil
}

var _adminChallengesUpdateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x3d\x6e\xc3\x30\x0c\x85\x77\x9f\x42\xe0\xac\x13\x64\x2b\xba\x16\x68\x97\x4e\x41\x06\xc6\xa2\x1d\xb6\xfa\xab\x44\x0d\x46\x91\xbb\x17\x72\xd2\x40\x0a\xdc\x22\x9b\x4d\x7c\xe4\xe3\x7b\xd4\xf7\xa0\x14\x08\x8b\x25\xd8\x29\x78\x32\x8e\xfd\xf3\x09\xad\x25\x3f\x53\x7e\x8f\x06\x85\x40\x57\xc6\x50\x1e\x13\x47\xe1\xe0\x2b\x79\x83\x54\x59\x21\x95\xe8\xab\x50\x96\x0b\x2c\x4b\x5c\xe7\x85\xe3\x07\x8d\xd7\x5a\x4c\x21\x52\x12\xa6\x0c\x3b\x55\x65\x1b\xe1\xcb\x6f\xd3\x98\x25\xb1\x9f\x61\x2d\x9f\xf5\x05\xee\x37\x78\xa8\x65\x44\xa1\x39\xa4\x56\xb3\xe9\xc0\x94\x70\x01\xfd\x5b\x66\x21\xd7\x72\x7f\xcc\x56\xea\xdc\x69\xc4\xc0\x5e\x36\xe7\xfb\xe2\x8e\x94\xee\x4c\xf0\x34\xf1\x58\xac\x2c\xff\x78\xb8\xad\x44\xbe\x38\xd8\xa9\x3d\x10\xe6\x05\xb4\x02\x47\x86\x8b\xab\x5f\x27\x4c\x06\x0e\xdd\xec\xc9\xe2\xfc\x68\x32\x9c\x5f\xc2\xf8\x49\x66\x8b\x3f\x86\x60\x09\xfd\x7d\xfa\x91\xbc\xc9\xaf\x9b\xd9\x77\x4e\x87\x6b\x13\xa0\x31\x5c\xaf\x85\xf6\xad\xbd\xfd\x84\x36\xd3\x0a\xd4\x37\xc3\x69\x5d\x62\x7f\x7d\x0b\xba\x3b\x9a\xbe\xc5\xab\xbb\xe8\x74\x63\xe0\x30\x9c\x87\x9f\x00\x00\x00\xff\xff\xa2\xb4\x9a\x7c\xc6\x02\x00\x00")

func adminChallengesUpdateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminChallengesUpdateJson,
		"admin/challenges/update.json",
	)
}

func adminChallengesUpdateJson() (*asset, error) {
	bytes, err := adminChallengesUpdateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/challenges/update.json", size: 710, mode: os.FileMode(0644), modTime: time.Unix(1611316116, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0xcf, 0xdb, 0x77, 0x8b, 0x45, 0x88, 0x5c, 0xe3, 0xb7, 0xfc, 0x9d, 0xc6, 0x87, 0xfc, 0x58, 0x81, 0x34, 0x3f, 0xb4, 0xa2, 0x18, 0x28, 0xc, 0x92, 0xc4, 0xd0, 0xb6, 0x4c, 0xd7, 0x87, 0x9b}}
	return a, nil
}

var _adminUsersCreateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbd\x4e\xfc\x40\x0c\xc4\xfb\x7d\x0a\x6b\xeb\x3c\xc0\x5f\xe9\x4e\xff\x96\x82\x86\x0a\x51\xf8\xb2\xbe\xc3\x68\xbf\xb0\xcd\x97\xd0\xbd\x3b\xda\x4d\x40\xc9\x29\x42\x94\xf1\xfc\x66\x32\x3b\x9f\x0e\xc0\x1b\x5b\x24\x3f\x82\x3f\x84\xc4\xf9\x4e\x49\xf4\xbf\x10\x1a\xf9\xa1\xc9\x81\x74\x12\xae\xc6\x25\x37\xa8\xe9\x30\x75\x1d\x84\x9e\x5f\x48\x6d\xe6\xec\xa3\xf6\x94\x72\x7c\xa2\x69\xb9\x55\x29\x95\xc4\x98\xd4\x8f\xd0\x7e\x06\xe0\x33\x26\xfa\xf9\x5a\xf9\xd4\x84\xf3\xd9\xf7\xf3\x65\x98\x59\x4a\xc8\xf1\x17\x78\xf8\xbe\x9f\x8a\x24\xb4\xa6\xcc\x96\x4d\x4a\x45\xd5\xb7\x22\xe1\x2f\x41\x89\xf3\x0d\xe5\xb3\x3d\xfa\x11\xfe\x6d\x52\x58\x0f\x93\xf1\x2b\x1a\xed\x06\x1d\x4b\x89\x84\xf9\xaa\xff\xbb\x09\xee\xd1\xcb\x48\x33\xec\x16\x83\xc7\x10\xb8\xed\x8c\xf1\x76\x3d\xdc\x09\xa3\x52\x07\xda\xe0\x2c\xbd\xc0\xfd\x6a\xcd\xcd\x5a\xd7\x8f\xde\xa9\xbf\x69\xe7\x00\x1e\xdc\xc5\x7d\x05\x00\x00\xff\xff\x7a\xd9\x0c\xbe\x0b\x02\x00\x00")

func adminUsersCreateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminUsersCreateJson,
		"admin/users/create.json",
	)
}

func adminUsersCreateJson() (*asset, error) {
	bytes, err := adminUsersCreateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/users/create.json", size: 523, mode: os.FileMode(0644), modTime: time.Unix(1533737066, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x3a, 0x60, 0x8f, 0xd6, 0x97, 0xbc, 0xe6, 0x65, 0x40, 0x4e, 0x71, 0xda, 0x32, 0x5, 0x7f, 0xdc, 0x5, 0x15, 0xa0, 0xad, 0x91, 0xe4, 0xf3, 0x6c, 0x8a, 0xf0, 0x3d, 0x16, 0x71, 0xbd, 0x12}}
	return a, nil
}

var _adminUsersGetallJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcd\x41\x0a\x83\x40\x0c\x85\xe1\xfd\x9c\xe2\x11\xba\x2c\x75\xef\xce\x95\x27\xe8\x01\xa4\x46\x48\x89\x33\x43\x92\x2e\xa4\x78\xf7\x92\xba\x4d\x3e\xde\xff\x2d\x00\x85\x84\x32\x8d\xa0\x69\xdd\xa5\xfa\xd3\xd9\x7c\xe6\x98\x54\xe9\x9e\xff\x95\xfd\x65\xd2\x43\x5a\x4d\x35\x73\x60\x51\xc5\x27\x1d\x8c\xbd\xb7\xca\x7e\xd1\x38\xfa\x7f\x69\x31\x5b\x8e\xeb\x24\xc1\xbb\xd3\x88\x4c\x01\x74\x33\xde\x52\x6c\xa2\x3c\x0e\xc3\x90\xb5\xc7\xdb\x5b\xa5\x02\x9c\xe5\x2c\xbf\x00\x00\x00\xff\xff\x6d\x2f\xd0\x61\x93\x00\x00\x00")

func adminUsersGetallJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminUsersGetallJson,
		"admin/users/getAll.json",
	)
}

func adminUsersGetallJson() (*asset, error) {
	bytes, err := adminUsersGetallJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/users/getAll.json", size: 147, mode: os.FileMode(0644), modTime: time.Unix(1533737117, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x61, 0x28, 0xc5, 0x25, 0x91, 0xba, 0xea, 0x95, 0x82, 0x51, 0xe3, 0x54, 0x32, 0xf, 0x1a, 0x8c, 0x13, 0x31, 0x83, 0x15, 0x31, 0xf3, 0x20, 0xcc, 0xd8, 0x6c, 0xec, 0x34, 0x18, 0x3b, 0x3d}}
	return a, nil
}

var _adminUsersGetoneJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcd\xb1\x0e\x82\x50\x0c\x85\xe1\xfd\x3e\xc5\x49\xe3\x68\x64\x67\x73\x62\x74\xf2\x01\x88\x1c\x92\x1a\xe8\x25\x6d\x1d\x88\xe1\xdd\xcd\x95\xb5\xfd\x72\xfe\x6f\x01\x24\x35\x17\x4a\x0f\xb9\x4f\xab\x5a\x3c\x83\x1e\x03\xf3\x61\x94\x6b\xfb\x4f\x8c\x97\xeb\x96\x5a\xad\xa9\x81\x89\x6a\xc4\x27\xe8\x70\xc6\x56\x8d\x71\xca\xdc\xb7\xff\xd0\xe8\x3e\xee\xe7\x49\x93\x6b\x48\x8f\x56\x02\xe4\xe2\x9c\x9b\x98\x75\x61\xdf\x75\x5d\x8b\xdd\xde\x51\x4d\x0a\x70\x94\xa3\xfc\x02\x00\x00\xff\xff\x19\xc2\xc2\x97\x92\x00\x00\x00")

func adminUsersGetoneJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminUsersGetoneJson,
		"admin/users/getOne.json",
	)
}

func adminUsersGetoneJson() (*asset, error) {
	bytes, err := adminUsersGetoneJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/users/getOne.json", size: 146, mode: os.FileMode(0644), modTime: time.Unix(1533737134, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0x3, 0x45, 0x6f, 0x31, 0xe8, 0xb2, 0xaf, 0xad, 0x1f, 0xef, 0x44, 0x22, 0x4c, 0x64, 0x78, 0xaf, 0x44, 0x52, 0x57, 0x96, 0xb3, 0x11, 0x98, 0xd6, 0xef, 0xf1, 0x4f, 0xa4, 0x4d, 0xd5, 0x84}}
	return a, nil
}

var _adminUsersUpdateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x3b\x6e\xf4\x30\x0c\x84\x7b\x9d\x82\x50\xed\x03\xfc\x70\xb7\xfd\x5f\xa4\xd9\x2a\x48\xc1\xb5\xb8\x1b\x06\x7a\x85\xe4\xe6\x81\x60\xef\x1e\x48\x76\x02\x3b\x30\x82\x94\xe2\x7c\x33\x1a\xcc\x87\x03\xf0\xc6\x16\xc9\x8f\xe0\x0f\x21\x71\x3e\x2a\xc9\xb1\x06\x34\xf2\x43\x53\x03\xe9\x24\x5c\x8d\x4b\x6e\x4c\x93\xe1\xda\x75\x10\x7a\xbe\x92\xda\xcc\xd9\x7b\xed\x21\xe5\xf4\x44\xd3\x72\xab\x52\x2a\x89\x31\xa9\x1f\xa1\xfd\x05\xe0\x33\x26\xfa\x7e\xad\x7c\x6a\xc2\xf9\xe2\xfb\xf9\x36\xcc\x2c\x25\xe4\xf8\x0b\x3c\x7c\xdd\xcf\x45\x12\x5a\x53\x66\xcb\x26\xa5\xa2\xea\x6b\x91\xf0\x97\xa0\xc4\xf9\x3f\xe5\x8b\x3d\xfa\x11\xfe\x6d\x52\x58\x0f\x93\xf1\x0b\x1a\xed\x06\x9d\x4a\x89\x84\xf9\x47\xff\x37\x13\xdc\xa3\x97\x91\x66\xd8\x2d\x06\x8f\x21\x70\xdb\x19\xe3\xdd\x7a\xb8\x33\x46\xa5\x0e\xb4\xc1\x59\x7a\x81\xfb\xd5\x9a\x9b\xb5\x76\xea\x6e\xda\x38\x80\x07\x77\x73\x9f\x01\x00\x00\xff\xff\x7e\xe4\x8a\xd1\xfa\x01\x00\x00")

func adminUsersUpdateJsonBytes() ([]byte, error) {
	return bindataRead(
		_adminUsersUpdateJson,
		"admin/users/update.json",
	)
}

func adminUsersUpdateJson() (*asset, error) {
	bytes, err := adminUsersUpdateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin/users/update.json", size: 506, mode: os.FileMode(0644), modTime: time.Unix(1539513967, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0x40, 0x5a, 0xf6, 0x75, 0xe4, 0x88, 0xcf, 0x57, 0x15, 0x7e, 0x80, 0x29, 0xe4, 0x16, 0x42, 0xa9, 0x53, 0xee, 0x40, 0x7b, 0x81, 0x59, 0xd5, 0xca, 0x0, 0xa, 0x2d, 0x24, 0x51, 0x2d, 0x18}}
	return a, nil
}

var _usersGetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xc9\x2c\xc9\x49\x55\xb2\x52\x50\x0a\x2d\x4e\x2d\x2a\x56\xd2\x01\x89\xa5\xa4\x16\x27\x17\x65\x16\x94\x64\xe6\xe7\x81\x64\x7c\x32\x8b\x4b\x14\xf2\xd3\x14\x4a\x11\x2a\x4a\x2a\x0b\xc0\x9a\xf2\x93\xb2\x52\x93\x4b\x20\x62\x2a\x45\xa9\x69\x20\xb1\xb4\xcc\x9c\x54\x2b\x7d\x7d\x7d\x90\x81\x7a\x59\xc5\xf9\x79\x4a\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xb2\xab\xea\x18\x6c\x00\x00\x00")

func usersGetJsonBytes() ([]byte, error) {
	return bindataRead(
		_usersGetJson,
		"users/get.json",
	)
}

func usersGetJson() (*asset, error) {
	bytes, err := usersGetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "users/get.json", size: 108, mode: os.FileMode(0644), modTime: time.Unix(1533736475, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0x21, 0x94, 0x3e, 0xe3, 0xd0, 0x1b, 0xda, 0x92, 0x55, 0xfc, 0x5a, 0x8c, 0xba, 0x98, 0x2b, 0x7, 0xda, 0x5a, 0xa6, 0x9c, 0x62, 0x14, 0xfa, 0x3b, 0x8a, 0xa, 0xc6, 0x43, 0x57, 0x41, 0x1e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"AdminAuthLogin.json":             adminauthloginJson,
	"AdminUsersCreate.json":           adminuserscreateJson,
	"Announcement.json":               announcementJson,
	"Announcements.json":              announcementsJson,
	"AuthActivate.json":               authactivateJson,
	"AuthLogin.json":                  authloginJson,
	"AuthRegister.json":               authregisterJson,
	"AuthResetPassword.json":          authresetpasswordJson,
	"AuthSendToken.json":              authsendtokenJson,
	"Challenge.json":                  challengeJson,
	"ChallengeE.json":                 challengeeJson,
	"ChallengeMeta.json":              challengemetaJson,
	"ChallengeUser.json":              challengeuserJson,
	"Challenges.json":                 challengesJson,
	"Error.json":                      errorJson,
	"GameInfo.json":                   gameinfoJson,
	"Score.json":                      scoreJson,
	"Scores.json":                     scoresJson,
	"ScoresCTFTime.json":              scoresctftimeJson,
	"Solution.json":                   solutionJson,
	"User.json":                       userJson,
	"UserPublic.json":                 userpublicJson,
	"UserSolutionsCreate.json":        usersolutionscreateJson,
	"Users.json":                      usersJson,
	"admin/announcements/create.json": adminAnnouncementsCreateJson,
	"admin/announcements/update.json": adminAnnouncementsUpdateJson,
	"admin/auth/login.json":           adminAuthLoginJson,
	"admin/challenges/create.json":    adminChallengesCreateJson,
	"admin/challenges/getAll.json":    adminChallengesGetallJson,
	"admin/challenges/getOne.json":    adminChallengesGetoneJson,
	"admin/challenges/update.json":    adminChallengesUpdateJson,
	"admin/users/create.json":         adminUsersCreateJson,
	"admin/users/getAll.json":         adminUsersGetallJson,
	"admin/users/getOne.json":         adminUsersGetoneJson,
	"admin/users/update.json":         adminUsersUpdateJson,
	"users/get.json":                  usersGetJson,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"AdminAuthLogin.json":      {adminauthloginJson, map[string]*bintree{}},
	"AdminUsersCreate.json":    {adminuserscreateJson, map[string]*bintree{}},
	"Announcement.json":        {announcementJson, map[string]*bintree{}},
	"Announcements.json":       {announcementsJson, map[string]*bintree{}},
	"AuthActivate.json":        {authactivateJson, map[string]*bintree{}},
	"AuthLogin.json":           {authloginJson, map[string]*bintree{}},
	"AuthRegister.json":        {authregisterJson, map[string]*bintree{}},
	"AuthResetPassword.json":   {authresetpasswordJson, map[string]*bintree{}},
	"AuthSendToken.json":       {authsendtokenJson, map[string]*bintree{}},
	"Challenge.json":           {challengeJson, map[string]*bintree{}},
	"ChallengeE.json":          {challengeeJson, map[string]*bintree{}},
	"ChallengeMeta.json":       {challengemetaJson, map[string]*bintree{}},
	"ChallengeUser.json":       {challengeuserJson, map[string]*bintree{}},
	"Challenges.json":          {challengesJson, map[string]*bintree{}},
	"Error.json":               {errorJson, map[string]*bintree{}},
	"GameInfo.json":            {gameinfoJson, map[string]*bintree{}},
	"Score.json":               {scoreJson, map[string]*bintree{}},
	"Scores.json":              {scoresJson, map[string]*bintree{}},
	"ScoresCTFTime.json":       {scoresctftimeJson, map[string]*bintree{}},
	"Solution.json":            {solutionJson, map[string]*bintree{}},
	"User.json":                {userJson, map[string]*bintree{}},
	"UserPublic.json":          {userpublicJson, map[string]*bintree{}},
	"UserSolutionsCreate.json": {usersolutionscreateJson, map[string]*bintree{}},
	"Users.json":               {usersJson, map[string]*bintree{}},
	"admin": {nil, map[string]*bintree{
		"announcements": {nil, map[string]*bintree{
			"create.json": {adminAnnouncementsCreateJson, map[string]*bintree{}},
			"update.json": {adminAnnouncementsUpdateJson, map[string]*bintree{}},
		}},
		"auth": {nil, map[string]*bintree{
			"login.json": {adminAuthLoginJson, map[string]*bintree{}},
		}},
		"challenges": {nil, map[string]*bintree{
			"create.json": {adminChallengesCreateJson, map[string]*bintree{}},
			"getAll.json": {adminChallengesGetallJson, map[string]*bintree{}},
			"getOne.json": {adminChallengesGetoneJson, map[string]*bintree{}},
			"update.json": {adminChallengesUpdateJson, map[string]*bintree{}},
		}},
		"users": {nil, map[string]*bintree{
			"create.json": {adminUsersCreateJson, map[string]*bintree{}},
			"getAll.json": {adminUsersGetallJson, map[string]*bintree{}},
			"getOne.json": {adminUsersGetoneJson, map[string]*bintree{}},
			"update.json": {adminUsersUpdateJson, map[string]*bintree{}},
		}},
	}},
	"users": {nil, map[string]*bintree{
		"get.json": {usersGetJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
